import { useState } from 'react';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';

const optName = 'opt';

const MediaLink = function MediaLink() {
  const [isFile, setIsFile] = useState(true);

  const onChange = function onChange(e: React.ChangeEvent<HTMLInputElement>) {
    const { value } = e.target as HTMLInputElement;

    if (JSON.parse(value)) setIsFile(true);
    else setIsFile(() => false);
  };

  return (
    <>
      <div>
        <label htmlFor='file-radio'>File</label>
        <input
          id='file-radio'
          type='radio'
          name={optName}
          value='true'
          checked={isFile}
          onChange={onChange}
        />
        <label htmlFor='link-radio'>URL</label>
        <input id='link-radio' type='radio' name={optName} value='false' onChange={onChange} />
      </div>
      {isFile ? (
        <>
          <label htmlFor='file'>File</label>
          <input id='file' type='file' name='file' required />
        </>
      ) : (
        <>
          <label htmlFor='file'>URL</label>
          <input id='file' type='text' name='file' required />
        </>
      )}
    </>
  );
};

export default function Home() {
  const [isView, setIsView] = useState(true);
  const [loading, isLoading] = useState(false);

  const onSubmit = function onSubmit(e: React.FormEvent<HTMLFormElement>, url: string) {
    e.preventDefault();

    const form = new FormData(e.target as HTMLFormElement);
    if (form.get(optName)) form.delete(optName);

    isLoading(true);
    fetch(url, {
      method: 'POST',
      body: form,
    })
      .then((res) => console.log(res))
      .catch((err) => console.log(err))
      .finally(() => {
        isLoading(false);
      });
  };

  const onChange = function onChange(e: React.ChangeEvent<HTMLInputElement>) {
    const { value } = e.target as HTMLInputElement;

    if (JSON.parse(value)) setIsView(true);
    else setIsView(() => false);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <div>
          <label htmlFor='view-radio'>View</label>
          <input
            id='view-radio'
            type='radio'
            name='form'
            value='true'
            checked={isView}
            onChange={onChange}
          />
          <label htmlFor='music-radio'>Music</label>
          <input id='music-radio' type='radio' name='form' value='false' onChange={onChange} />
        </div>
        {isView ? (
          <form onSubmit={(e) => onSubmit(e, '/api/views?q=view')}>
            <label htmlFor='name'>Name</label>
            <input id='name' type='text' name='name' required />
            <label htmlFor='source'>Source</label>
            <input id='source' type='text' name='source' required />
            <label htmlFor='source-link'>Source Link</label>
            <input id='source-link' type='text' name='source_link' required />
            <label htmlFor='latitude'>Latitude</label>
            <input id='latitude' type='number' step='0.01' name='lat' required />
            <label htmlFor='longitude'>Longitude</label>
            <input id='longitude' type='number' step='0.01' name='lng' required />
            <MediaLink />
            <button type='submit'>Submit</button>
          </form>
        ) : (
          <form onSubmit={(e) => onSubmit(e, '/api/views?q=music')}>
            <label htmlFor='title'>Title</label>
            <input id='title' type='text' name='title' required />
            <label htmlFor='author'>Author</label>
            <input id='author' type='text' name='author' required />
            <label htmlFor='copyright'>Copyright &#169;</label>
            <input id='copyright' type='text' name='copyright' required />
            <label htmlFor='file'>File</label>
            <input id='file' type='file' name='file' required />
            <button type='submit'>Submit</button>
          </form>
        )}
        {loading && <p>Loading...</p>}
      </main>

      <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
